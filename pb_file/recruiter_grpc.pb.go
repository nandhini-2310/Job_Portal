// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.30.1
// source: proto/recruiter.proto

package pb_file

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	RecruiterService_CreateRecruiter_FullMethodName = "/RecruiterService/CreateRecruiter"
	RecruiterService_GetRecruiter_FullMethodName    = "/RecruiterService/GetRecruiter"
	RecruiterService_ListRecruiters_FullMethodName  = "/RecruiterService/ListRecruiters"
	RecruiterService_UpdateRecruiter_FullMethodName = "/RecruiterService/UpdateRecruiter"
	RecruiterService_DeleteRecruiter_FullMethodName = "/RecruiterService/DeleteRecruiter"
)

// RecruiterServiceClient is the client API for RecruiterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RecruiterServiceClient interface {
	CreateRecruiter(ctx context.Context, in *RecruiterRequest, opts ...grpc.CallOption) (*RecruiterResponse, error)
	GetRecruiter(ctx context.Context, in *RecruiterID, opts ...grpc.CallOption) (*RecruiterGetResponse, error)
	ListRecruiters(ctx context.Context, in *RecruiterEmpty, opts ...grpc.CallOption) (*RecruiterListResponse, error)
	UpdateRecruiter(ctx context.Context, in *UpdateRecruiterRequest, opts ...grpc.CallOption) (*RecruiterResponse, error)
	DeleteRecruiter(ctx context.Context, in *RecruiterID, opts ...grpc.CallOption) (*RecruiterResponse, error)
}

type recruiterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRecruiterServiceClient(cc grpc.ClientConnInterface) RecruiterServiceClient {
	return &recruiterServiceClient{cc}
}

func (c *recruiterServiceClient) CreateRecruiter(ctx context.Context, in *RecruiterRequest, opts ...grpc.CallOption) (*RecruiterResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RecruiterResponse)
	err := c.cc.Invoke(ctx, RecruiterService_CreateRecruiter_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruiterServiceClient) GetRecruiter(ctx context.Context, in *RecruiterID, opts ...grpc.CallOption) (*RecruiterGetResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RecruiterGetResponse)
	err := c.cc.Invoke(ctx, RecruiterService_GetRecruiter_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruiterServiceClient) ListRecruiters(ctx context.Context, in *RecruiterEmpty, opts ...grpc.CallOption) (*RecruiterListResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RecruiterListResponse)
	err := c.cc.Invoke(ctx, RecruiterService_ListRecruiters_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruiterServiceClient) UpdateRecruiter(ctx context.Context, in *UpdateRecruiterRequest, opts ...grpc.CallOption) (*RecruiterResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RecruiterResponse)
	err := c.cc.Invoke(ctx, RecruiterService_UpdateRecruiter_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruiterServiceClient) DeleteRecruiter(ctx context.Context, in *RecruiterID, opts ...grpc.CallOption) (*RecruiterResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RecruiterResponse)
	err := c.cc.Invoke(ctx, RecruiterService_DeleteRecruiter_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecruiterServiceServer is the server API for RecruiterService service.
// All implementations must embed UnimplementedRecruiterServiceServer
// for forward compatibility.
type RecruiterServiceServer interface {
	CreateRecruiter(context.Context, *RecruiterRequest) (*RecruiterResponse, error)
	GetRecruiter(context.Context, *RecruiterID) (*RecruiterGetResponse, error)
	ListRecruiters(context.Context, *RecruiterEmpty) (*RecruiterListResponse, error)
	UpdateRecruiter(context.Context, *UpdateRecruiterRequest) (*RecruiterResponse, error)
	DeleteRecruiter(context.Context, *RecruiterID) (*RecruiterResponse, error)
	mustEmbedUnimplementedRecruiterServiceServer()
}

// UnimplementedRecruiterServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedRecruiterServiceServer struct{}

func (UnimplementedRecruiterServiceServer) CreateRecruiter(context.Context, *RecruiterRequest) (*RecruiterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecruiter not implemented")
}
func (UnimplementedRecruiterServiceServer) GetRecruiter(context.Context, *RecruiterID) (*RecruiterGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecruiter not implemented")
}
func (UnimplementedRecruiterServiceServer) ListRecruiters(context.Context, *RecruiterEmpty) (*RecruiterListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRecruiters not implemented")
}
func (UnimplementedRecruiterServiceServer) UpdateRecruiter(context.Context, *UpdateRecruiterRequest) (*RecruiterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecruiter not implemented")
}
func (UnimplementedRecruiterServiceServer) DeleteRecruiter(context.Context, *RecruiterID) (*RecruiterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRecruiter not implemented")
}
func (UnimplementedRecruiterServiceServer) mustEmbedUnimplementedRecruiterServiceServer() {}
func (UnimplementedRecruiterServiceServer) testEmbeddedByValue()                          {}

// UnsafeRecruiterServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RecruiterServiceServer will
// result in compilation errors.
type UnsafeRecruiterServiceServer interface {
	mustEmbedUnimplementedRecruiterServiceServer()
}

func RegisterRecruiterServiceServer(s grpc.ServiceRegistrar, srv RecruiterServiceServer) {
	// If the following call pancis, it indicates UnimplementedRecruiterServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&RecruiterService_ServiceDesc, srv)
}

func _RecruiterService_CreateRecruiter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecruiterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruiterServiceServer).CreateRecruiter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruiterService_CreateRecruiter_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruiterServiceServer).CreateRecruiter(ctx, req.(*RecruiterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecruiterService_GetRecruiter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecruiterID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruiterServiceServer).GetRecruiter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruiterService_GetRecruiter_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruiterServiceServer).GetRecruiter(ctx, req.(*RecruiterID))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecruiterService_ListRecruiters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecruiterEmpty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruiterServiceServer).ListRecruiters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruiterService_ListRecruiters_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruiterServiceServer).ListRecruiters(ctx, req.(*RecruiterEmpty))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecruiterService_UpdateRecruiter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRecruiterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruiterServiceServer).UpdateRecruiter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruiterService_UpdateRecruiter_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruiterServiceServer).UpdateRecruiter(ctx, req.(*UpdateRecruiterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecruiterService_DeleteRecruiter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecruiterID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruiterServiceServer).DeleteRecruiter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruiterService_DeleteRecruiter_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruiterServiceServer).DeleteRecruiter(ctx, req.(*RecruiterID))
	}
	return interceptor(ctx, in, info, handler)
}

// RecruiterService_ServiceDesc is the grpc.ServiceDesc for RecruiterService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RecruiterService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "RecruiterService",
	HandlerType: (*RecruiterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRecruiter",
			Handler:    _RecruiterService_CreateRecruiter_Handler,
		},
		{
			MethodName: "GetRecruiter",
			Handler:    _RecruiterService_GetRecruiter_Handler,
		},
		{
			MethodName: "ListRecruiters",
			Handler:    _RecruiterService_ListRecruiters_Handler,
		},
		{
			MethodName: "UpdateRecruiter",
			Handler:    _RecruiterService_UpdateRecruiter_Handler,
		},
		{
			MethodName: "DeleteRecruiter",
			Handler:    _RecruiterService_DeleteRecruiter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/recruiter.proto",
}
